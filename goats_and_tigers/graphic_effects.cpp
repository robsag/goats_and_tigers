#include "goats_and_tigers.h"

void field_graphics(COORD point, char side, int color1, int color2);

void console_settings(void) {
	system("title Goats and Tigers");
	system("mode con: cols=100 lines=45");
	system("color 1A");

	RECT desktop;
	GetWindowRect(GetDesktopWindow(), &desktop);
	COORD desktop_size;
	desktop_size.X = desktop.right;
	desktop_size.Y = desktop.bottom;

	RECT console;
	GetClientRect(GetConsoleWindow(), &console);
	COORD console_size;
	console_size.X = console.right;
	console_size.Y = console.bottom;

	SetWindowPos(GetConsoleWindow(), 0, (desktop_size.X - console_size.X) / 2 - 10, (desktop_size.Y - console_size.Y) / 2 - 30, 0, 0, SWP_NOSIZE | SWP_NOZORDER);
}

void change_color(int color) {
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color);
}

void change_color_intensity(int color) {
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color | BACKGROUND_INTENSITY);
}

void intro_graphics() {
	char a[] = { 219, 186, 187, 188, 200, 201, 205 }; //ascii
	cout << "\n\n\n\n\n\n\n\n\n\n";
	cout << "                            " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "  " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "  " << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << " " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "\n";
	cout << "                           " << a[0] << a[0] << a[5] << a[6] << a[6] << a[6] << a[6] << a[3] << " " << a[0] << a[0] << a[5] << a[6] << a[6] << a[6] << a[0] << a[0] << a[2] << a[0] << a[0] << a[5] << a[6] << a[6] << a[0] << a[0] << a[2] << a[4] << a[6] << a[6] << a[0] << a[0] << a[5] << a[6] << a[6] << a[3] << a[0] << a[0] << a[5] << a[6] << a[6] << a[6] << a[6] << a[3] << "\n";
	cout << "                           " << a[0] << a[0] << a[1] << "  " << a[0] << a[0] << a[0] << a[2] << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "\n";
	cout << "                           " << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << a[0] << a[0] << a[5] << a[6] << a[6] << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << "   " << a[4] << a[6] << a[6] << a[6] << a[6] << a[0] << a[0] << a[1] << "\n";
	cout << "                           " << a[4] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[5] << a[3] << a[4] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[5] << a[3] << a[0] << a[0] << a[1] << "  " << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[1] << "\n";
	cout << "                            " << a[4] << a[6] << a[6] << a[6] << a[6] << a[6] << a[3] << "  " << a[4] << a[6] << a[6] << a[6] << a[6] << a[6] << a[3] << " " << a[4] << a[6] << a[3] << "  " << a[4] << a[6] << a[3] << "   " << a[4] << a[6] << a[3] << "   " << a[4] << a[6] << a[6] << a[6] << a[6] << a[6] << a[6] << a[3] << "\n";

	cout << "                      \n\n";

	cout << "                                     " << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << " " << a[0] << a[0] << a[0] << a[2] << "   " << a[0] << a[0] << a[2] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "\n";
	cout << "                                    " << a[0] << a[0] << a[5] << a[6] << a[6] << a[0] << a[0] << a[2] << a[0] << a[0] << a[0] << a[0] << a[2] << "  " << a[0] << a[0] << a[1] << a[0] << a[0] << a[5] << a[6] << a[6] << a[0] << a[0] << a[2] << "\n";
	cout << "                                    " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[1] << a[0] << a[0] << a[5] << a[0] << a[0] << a[2] << " " << a[0] << a[0] << a[1] << a[0] << a[0] << a[1] << "  " << a[0] << a[0] << a[1] << "\n";
	cout << "                                    " << a[0] << a[0] << a[5] << a[6] << a[6] << a[0] << a[0] << a[1] << a[0] << a[0] << a[1] << a[4] << a[0] << a[0] << a[2] << a[0] << a[0] << a[1] << a[0] << a[0] << a[1] << "  " << a[0] << a[0] << a[1] << "\n";
	cout << "                                    " << a[0] << a[0] << a[1] << "  " << a[0] << a[0] << a[1] << a[0] << a[0] << a[1] << " " << a[4] << a[0] << a[0] << a[0] << a[0] << a[1] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[5] << a[3] << "\n";
	cout << "                                    " << a[4] << a[6] << a[3] << "  " << a[4] << a[6] << a[3] << a[4] << a[6] << a[3] << "  " << a[4] << a[6] << a[6] << a[6] << a[3] << a[4] << a[6] << a[6] << a[6] << a[6] << a[6] << a[3] << "\n";

	cout << "                      \n\n";

	cout << "                          " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << a[0] << a[0] << a[2] << " " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << " " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << " " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "\n";
	cout << "                          " << a[4] << a[6] << a[6] << a[0] << a[0] << a[5] << a[6] << a[6] << a[3] << a[0] << a[0] << a[1] << a[0] << a[0] << a[5] << a[6] << a[6] << a[6] << a[6] << a[3] << " " << a[0] << a[0] << a[5] << a[6] << a[6] << a[6] << a[6] << a[3] << a[0] << a[0] << a[5] << a[6] << a[6] << a[0] << a[0] << a[2] << a[0] << a[0] << a[5] << a[6] << a[6] << a[6] << a[6] << a[3] << "\n";
	cout << "                             " << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << a[0] << a[0] << a[1] << "  " << a[0] << a[0] << a[0] << a[2] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "  " << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[5] << a[3] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << "\n";
	cout << "                             " << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << a[0] << a[0] << a[5] << a[6] << a[6] << a[3] << "  " << a[0] << a[0] << a[5] << a[6] << a[6] << a[0] << a[0] << a[2] << a[4] << a[6] << a[6] << a[6] << a[6] << a[0] << a[0] << a[1] << "\n";
	cout << "                             " << a[0] << a[0] << a[1] << "   " << a[0] << a[0] << a[1] << a[4] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[5] << a[3] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[2] << a[0] << a[0] << a[1] << "  " << a[0] << a[0] << a[1] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[0] << a[1] << "\n";
	cout << "                             " << a[4] << a[6] << a[3] << "   " << a[4] << a[6] << a[3] << " " << a[4] << a[6] << a[6] << a[6] << a[6] << a[6] << a[3] << " " << a[4] << a[6] << a[6] << a[6] << a[6] << a[6] << a[6] << a[3] << a[4] << a[6] << a[3] << "  " << a[4] << a[6] << a[3] << a[4] << a[6] << a[6] << a[6] << a[6] << a[6] << a[6] << a[3] << "\n";

}

void new_game_graphics(int color = 26) {
	gotoxy(1,10);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "               NOWA GRA               " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void resume_game_graphics(int color = 26) {
	gotoxy(1, 15);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "               WZNOW GRE              " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void corrupted_file_graphics(void) {
	gotoxy(1, 18);
	change_color(26);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "           PLIK USZKODZONY            " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
}

void no_save_graphics(void) {
	gotoxy(1, 18);
	change_color(26);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "          BRAK ZAPISANEJ GRY          " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
}

void stats_graphics(int color = 26) {
	gotoxy(1, 20);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "              STATYSTYKI              " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void how_to_play_graphics(int color = 26) {
	gotoxy(1, 25);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "               JAK GRAC               " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void about_graphics(int color = 26) {
	gotoxy(1, 30);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "                O GRZE                " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void end_game_graphics(int color = 26) {
	gotoxy(1, 35);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "                ZAKONCZ               " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void menu_graphics(void) {
	gotoxy(1, 2);

	cout << "              ____             _                         _   _____ _                      \n";
	cout << "             / ___| ___   __ _| |_ ___    __ _ _ __   __| | |_   _(_) __ _  ___ _ __ ___  \n";
	cout << "            | |  _ / _ \\ / _` | __/ __|  / _` | '_ \\ / _` |   | | | |/ _` |/ _ \\ '__/ __| \n";
	cout << "            | |_| | (_) | (_| | |_\\__ \\ | (_| | | | | (_| |   | | | | (_| |  __/ |  \\__ \\ \n";
	cout << "             \\____|\\___/ \\__,_|\\__|___/  \\__,_|_| |_|\\__,_|   |_| |_|\\__, |\\___|_|  |___/ \n";
	cout << "                                                                     |___/                \n";

	new_game_graphics(28);
	resume_game_graphics();
	stats_graphics();
	how_to_play_graphics();
	about_graphics();
	end_game_graphics();
}

void draw_board(char* fields_values) {
	char b[] = { 219, 196, 179 }; //board chars

	//system("cls");
	gotoxy(1, 1);
	change_color(26);
	cout << "\n\n\n";

	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";

	cout << "     " << "  " << b[2] << "  \\       " << b[2] << "       /  " << b[2] << "  \\       " << b[2] << "       /  " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "   \\      " << b[2] << "      /   " << b[2] << "   \\      " << b[2] << "      /   " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "    \\     " << b[2] << "     /    " << b[2] << "    \\     " << b[2] << "     /    " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "     \\    " << b[2] << "    /     " << b[2] << "     \\    " << b[2] << "    /     " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "      \\   " << b[2] << "   /      " << b[2] << "      \\   " << b[2] << "   /      " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "       \\  " << b[2] << "  /       " << b[2] << "       \\  " << b[2] << "  /       " << b[2] << "\n";

	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";

	cout << "     " << "  " << b[2] << "       /  " << b[2] << "  \\       " << b[2] << "       /  " << b[2] << "  \\       " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "      /   " << b[2] << "   \\      " << b[2] << "      /   " << b[2] << "   \\      " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "     /    " << b[2] << "    \\     " << b[2] << "     /    " << b[2] << "    \\     " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "    /     " << b[2] << "     \\    " << b[2] << "    /     " << b[2] << "     \\    " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "   /      " << b[2] << "      \\   " << b[2] << "   /      " << b[2] << "      \\   " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "  /       " << b[2] << "       \\  " << b[2] << "  /       " << b[2] << "       \\  " << b[2] << "\n";

	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";

	cout << "     " << "  " << b[2] << "  \\       " << b[2] << "       /  " << b[2] << "  \\       " << b[2] << "       /  " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "   \\      " << b[2] << "      /   " << b[2] << "   \\      " << b[2] << "      /   " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "    \\     " << b[2] << "     /    " << b[2] << "    \\     " << b[2] << "     /    " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "     \\    " << b[2] << "    /     " << b[2] << "     \\    " << b[2] << "    /     " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "      \\   " << b[2] << "   /      " << b[2] << "      \\   " << b[2] << "   /      " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "       \\  " << b[2] << "  /       " << b[2] << "       \\  " << b[2] << "  /       " << b[2] << "\n";

	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";

	cout << "     " << "  " << b[2] << "       /  " << b[2] << "  \\       " << b[2] << "       /  " << b[2] << "  \\       " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "      /   " << b[2] << "   \\      " << b[2] << "      /   " << b[2] << "   \\      " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "     /    " << b[2] << "    \\     " << b[2] << "     /    " << b[2] << "    \\     " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "    /     " << b[2] << "     \\    " << b[2] << "    /     " << b[2] << "     \\    " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "   /      " << b[2] << "      \\   " << b[2] << "   /      " << b[2] << "      \\   " << b[2] << "\n";
	cout << "     " << "  " << b[2] << "  /       " << b[2] << "       \\  " << b[2] << "  /       " << b[2] << "       \\  " << b[2] << "\n";

	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << b[1] << b[1] << b[1] << b[1] << b[1] << b[1] << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";
	cout << "     " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "      " << b[0] << b[0] << b[0] << b[0] << b[0] << "\n";

	int x = 8;
	int y = 5;

	for (int i = 0; i < 5; i++) { //wypisanie wartoci pól 
		for (int j = 0; j < 5; j++) {
			gotoxy(x, y);
			int number = i * 5 + j;
			if (fields_values[number] != 219 && fields_values[number] != -37) { //char(219) = char(-37)
				COORD field = { x,y };
				if (fields_values[number] == 'K')
					field_graphics(field, 'K', 0xF9, 0xFF);
				else
					field_graphics(field, 'T', 0xE9, 0xEE);;
			}
			x += 11;
		}
		x = 8; //powrót na pocz¹tek wiersza (do pierwszej kolumny)
		y += 9; //przejscie do kolejnego wiersza
	}
}

void pick_a_mode_graphics(void) {
	gotoxy(1, 13);
	change_color(26);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "          WYBIERZ TRYB GRY            " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
}

void singleplayer_mode_graphics(int color = 26) {
	gotoxy(1, 18);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "             JEDNOOSOBOWY             " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void multiplayer_mode_graphics(int color = 26) {
	gotoxy(1, 23);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "              DWUOSOBOWY              " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void pick_a_side_graphics(void) {
	gotoxy(1, 13);
	change_color(26);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "           WYBIERZ STRONE             " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
}

void goats_side_graphics(int color = 26) {
	gotoxy(1, 18);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "                KOZY                  " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void tigers_side_graphics(int color = 26) {
	gotoxy(1, 23);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "               TYGRYSY                " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void goats_side_left_graphics(int color = 26) {
	gotoxy(1, 18);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "          " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "          " << c[0] << "                                      " << c[0] << "\n";
	cout << "          " << c[0] << "           GRACZ 1 - KOZY             " << c[0] << "\n";
	cout << "          " << c[0] << "                                      " << c[0] << "\n";
	cout << "          " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void tigers_side_left_graphics(int color = 26) {
	gotoxy(1, 23);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "          " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "          " << c[0] << "                                      " << c[0] << "\n";
	cout << "          " << c[0] << "          GRACZ 2 - TYGRYSY           " << c[0] << "\n";
	cout << "          " << c[0] << "                                      " << c[0] << "\n";
	cout << "          " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void goats_side_right_graphics(int color = 26) {
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	gotoxy(51, 18);
	cout << " " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	gotoxy(51, 19);
	cout << " " << c[0] << "                                      " << c[0] << "\n";
	gotoxy(51, 20);
	cout << " " << c[0] << "          GRACZ 1 - TYGRYSY           " << c[0] << "\n";
	gotoxy(51, 21);
	cout << " " << c[0] << "                                      " << c[0] << "\n";
	gotoxy(51, 22);
	cout << " " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void tigers_side_right_graphics(int color = 26) {
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	gotoxy(51, 23);
	cout << " " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	gotoxy(51, 24);
	cout << " " << c[0] << "                                      " << c[0] << "\n";
	gotoxy(51, 25);
	cout << " " << c[0] << "           GRACZ 2 - KOZY             " << c[0] << "\n";
	gotoxy(51, 26);
	cout << " " << c[0] << "                                      " << c[0] << "\n";
	gotoxy(51, 27);
	cout << " " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void set_nickname_graphics(int n) {
	gotoxy(1, 13);
	change_color(26);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	if (n == 0) 
		cout << "                              " << c[0] << "   PODAJ IMIE GRACZA (DO 15 ZNAKOW)   " << c[0] << "\n";
	else
		cout << "                              " << c[0] << "  PODAJ IMIE GRACZA "<< n <<" (DO 15 ZNAKOW)  " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
}

void if_end_resume_graphics(int color = 26) {
	gotoxy(1, 18);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "              WZNOW GRE               " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void if_end_end_graphics(int color = 26) {
	gotoxy(1, 23);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "             ZAKONCZ GRE              " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void if_save_save_graphics(int color = 26) {
	gotoxy(1, 18);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "             ZAPISZ GRE               " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void if_save_dont_save_graphics(int color = 26) {
	gotoxy(1, 23);
	change_color(color);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	cout << "                              " << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[0] << "           NIE ZAPISUJ GRY            " << c[0] << "\n";
	cout << "                              " << c[0] << "                                      " << c[0] << "\n";
	cout << "                              " << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5] << "\n";
	change_color(26);
}

void select_field_graphics(COORD point, char side, int color = 26) {
	change_color(28);
	gotoxy(point.X - 2, point.Y - 1);
	cout << char(219) << char(219) << char(219) << char(219) << char(219);
	gotoxy(point.X - 2, point.Y);
	cout << char(219) << char(219);
	if (side != char(219)) {
		change_color(color);
		cout << char(toupper(side));
		change_color(28);
	}
	else
		cout << char(219);
	cout << char(219) << char(219);
	gotoxy(point.X - 2, point.Y + 1);
	cout << char(219) << char(219) << char(219) << char(219) << char(219);
	change_color(26);
}

void field_graphics(COORD point, char side, int color1, int color2) {
	change_color(color2);
	gotoxy(point.X - 2, point.Y - 1);
	cout << char(219) << char(219) << char(219) << char(219) << char(219);
	gotoxy(point.X - 2, point.Y);
	cout << char(219) << char(219);
	if (side != char(219)) {
		change_color(color1);
		cout << side;
		change_color(color2);
	}
	else
		cout << char(219);
	cout << char(219) << char(219);
	gotoxy(point.X - 2, point.Y + 1);
	cout << char(219) << char(219) << char(219) << char(219) << char(219);
	change_color(26);
}

void winner_graphics(char* winner) {
	change_color(28);
	char c[] = { 186, 205, 201, 200, 187, 188 }; //pionowa, pozioma, lewy górny róg, lewy dolny róg, prawy górny róg, prawy dolny róg
	gotoxy(31, 18);
	cout << c[2] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[4];
	gotoxy(31, 19);
	cout << c[0] << "                                      " << c[0];
	gotoxy(31, 20);
	cout << c[0] << "                                      " << c[0];
	gotoxy(31, 21);
	cout << c[0];
	for (int i = 0; i < (38 - strlen(winner) - 9) / 2; i++)
		cout << " ";
	change_color(26);
	cout << winner << " wygrywa!";
	change_color(28);
	for (int i = 0; i < 38 - (38 - strlen(winner) - 9) / 2 - strlen(winner) - 9; i++)
		cout << " ";
	cout << c[0];
	gotoxy(31, 22);
	cout << c[0] << "                                      " << c[0];
	gotoxy(31, 23);
	cout << c[0] << "                                      " << c[0];
	gotoxy(31, 24);
	cout << c[3] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[1] << c[5];
	gotoxy(31 + 38 - (38 - strlen(winner) - 10) / 2, 21);
	change_color(26);
}
